{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BACMC,EAAU,mCAGVC,EAAaC,SAASC,cAAc,iCACpCC,EAAWF,SAASC,cAAc,iCAClCE,EAAaH,SAASC,cAAc,iBACtCG,EAAY,GAoChB,SAASC,IACPD,EAAUE,SAAQ,SAAAC,I,SAKUC,GAAfC,EAAcC,MAAAC,KAAAC,U,CAJzBC,CAAeN,E,aAIJE,I,OAAAA,EAAfK,EAAAlB,EAAA,CAAAkB,EAAAC,GAAAC,MAAA,SAAAC,EAA8BT,G,kFACJU,EAAAC,IAEpB,sCAAoDC,OAAdZ,EAAG,aAAmBY,OAARtB,EAAQ,oBAE7DuB,MAAK,SAAAC,GACJC,EAAaD,EAAUE,K,WALZC,EAAAC,K,4CADYhB,MAAAC,KAAAC,U,CAU7B,SAASW,EAAaC,GACpB,IAAMG,EAAQH,EAAKI,OAAOC,KAAI,SAAAC,G,OAAMA,EAAGC,I,IAAMC,KAAK,MAC5CC,EAAU,qCACDb,OADsCI,EAAKhB,GAAG,sBAE3DY,OA7DgB,kCA4DWI,EAAKU,YAAY,SAGlBd,OAF1BI,EAAKW,MACN,qDAEkCf,OADPI,EAAKW,MAAM,6CACOf,OAAXO,EAAM,OAGvCP,OAH4CI,EAAKY,aAAaC,MAC9D,EACA,GACA,mBAEFlC,EAAWmC,mBAAmB,YAAaL,E,CA9D7ClC,EAAWwC,iBAAiB,SAG5B,WACExC,EAAWyC,UAAUC,IAAI,oBACzBvC,EAASsC,UAAUE,OAAO,oBAC1BvC,EAAWwC,UAAY,GACvB,IAAMC,EAAeC,aAAaC,QAAQ,uBAG1C,GAFA1C,EAAY2C,KAAKC,MAAMJ,IAElBA,EAAc,CAGjB,YADAzC,EAAWwC,UADM,yD,CAInBtC,G,IAdFH,EAASqC,iBAAiB,SAiB1B,WACErC,EAASsC,UAAUC,IAAI,oBACvB1C,EAAWyC,UAAUE,OAAO,oBAC5BvC,EAAWwC,UAAY,GACvB,IAAMM,EAAaJ,aAAaC,QAAQ,qBAGxC,GAFA1C,EAAY2C,KAAKC,MAAMC,IAElBA,EAAY,CAGf,YADA9C,EAAWwC,UADM,uD,CAKnBtC,G","sources":["src/js/library-watched-queue.js"],"sourcesContent":["const axios = require('axios');\nconst API_KEY = '5fe2b2c003e2bf661ee6b8424d931ac2';\nconst IMG_REGUEST = 'https://image.tmdb.org/t/p/w342';\n\nconst btnWatched = document.querySelector('.header__library-button-watch');\nconst btnQueue = document.querySelector('.header__library-button-queue');\nconst moviesList = document.querySelector('[data-movies]');\nlet parseFilm = [];\n\nbtnWatched.addEventListener('click', onLoadWatched);\nbtnQueue.addEventListener('click', onLoadQueue);\n\nfunction onLoadWatched() {\n  btnWatched.classList.add('btn-color-change');\n  btnQueue.classList.remove('btn-color-change');\n  moviesList.innerHTML = '';\n  const filmsWatched = localStorage.getItem('STORAGE_KEY_WATCHED');\n  parseFilm = JSON.parse(filmsWatched);\n\n  if (!filmsWatched) {\n    const marckup = `<span class=\"film__name\">Your watched is empty!</span>`;\n    moviesList.innerHTML = marckup;\n    return;\n  }\n  getId();\n}\n\nfunction onLoadQueue() {\n  btnQueue.classList.add('btn-color-change');\n  btnWatched.classList.remove('btn-color-change');\n  moviesList.innerHTML = '';\n  const filmsQueue = localStorage.getItem('STORAGE_KEY_QUEUE');\n  parseFilm = JSON.parse(filmsQueue);\n\n  if (!filmsQueue) {\n    const marckup = `<span class=\"film__name\">Your queue is empty!</span>`;\n    moviesList.innerHTML = marckup;\n    return;\n  }\n\n  getId();\n}\n\nfunction getId() {\n  parseFilm.forEach(element => {\n    getElementById(element);\n  });\n}\n\nasync function getElementById(id) {\n  const respounse = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    )\n    .then(respounse => {\n      renderMovies(respounse.data);\n    });\n}\n\nfunction renderMovies(data) {\n  const genre = data.genres.map(el => el.name).join(', ');\n  const marckup = `<li class=\"films__item\" data-id = ${data.id}>\n      <img src=${IMG_REGUEST + data.poster_path} alt=${\n    data.title\n  } class=\"film_img\"/>\n      <p class=\"film__name\">${data.title}</p>\n      <p class=\"film__description\">${genre} | ${data.release_date.slice(\n    0,\n    4\n  )}</p>\n    </li>`;\n  moviesList.insertAdjacentHTML('beforeend', marckup);\n}\n"],"names":["$bpxeT","parcelRequire","$a19bba1c7fa92f43$var$API_KEY","$a19bba1c7fa92f43$var$btnWatched","document","querySelector","$a19bba1c7fa92f43$var$btnQueue","$a19bba1c7fa92f43$var$moviesList","$a19bba1c7fa92f43$var$parseFilm","$a19bba1c7fa92f43$var$getId","forEach","element","id","$a19bba1c7fa92f43$var$_getElementById","apply","this","arguments","$a19bba1c7fa92f43$var$getElementById","$parcel$interopDefault","$2TvXO","mark","_callee","$dIxxU","get","concat","then","respounse","$a19bba1c7fa92f43$var$renderMovies","data","_ctx","sent","genre","genres","map","el","name","join","marckup","poster_path","title","release_date","slice","insertAdjacentHTML","addEventListener","classList","add","remove","innerHTML","filmsWatched","localStorage","getItem","JSON","parse","filmsQueue"],"version":3,"file":"library.2349b814.js.map"}